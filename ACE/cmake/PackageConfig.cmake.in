@PREREQUISITE_LOCATIONS@

foreach(_package @PREREQUISITE_PACKAGES@)
  if (_package AND (NOT TARGET ${_package}))
    find_package(${_package} REQUIRED CONFIG)
  endif()
endforeach()
foreach(_package @OPTIONAL_PACKAGES@)
  find_package(${_package})
endforeach()

## !!! Important, always setting config variables after find_package(); otherwise, they might
## !!! not visible to clients.

## @package_name@_INCLUDE_DIR is the location of source tree when imported from the
## built tree; otherwise, it is the location of install tree.
set(@package_name@_INCLUDE_DIR @PACKAGE_DIR@ CACHE INTERNAL "")


## @package_name@_BINARY_DIR is the location of build tree when imported
## from the built tree; otherwise, it is the location of install tree.
set(@package_name@_BINARY_DIR @PACKAGE_BINARY_DIR@ CACHE INTERNAL "")

set(@package_name@_LIB_DIR @PACKAGE_LIB_DIR@ CACHE INTERNAL "")

@CONFIG_OPTIONS@

include("${@package_name@_BINARY_DIR}/@package_name@Targets.cmake" )

foreach(_cmake_file @CONFIG_INCLUDE_FILES@)
  include("${@package_name@_INCLUDE_DIR}/${_cmake_file}")
endforeach()

foreach(_comp ${@package_name@_FIND_COMPONENTS})
  if (TARGET ${_comp})
    set(${_comp}_FOUND 1)
  elseif(@package_name@_FIND_REQUIRED_${_comp})
    set(@package_name@_FOUND 0)
    set(@package_name@_NOTFOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
endforeach()
